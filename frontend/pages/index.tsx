import { Button, TextField } from '@mui/material'
import type { NextPage } from 'next'
import Head from 'next/head'
import PlaceCarForm from '../components/placecarform'
import NewGameForm from '../components/newgameform'
import { useState } from 'react'
import GameBoard from '../components/gameboard'
import axios from 'axios'
import Image from 'next/image'
import compass from '../public/images/compass.jpeg'

const Home: NextPage = () => {
  const [gameID, setGameID] = useState<number>()
  const [dimensionX, setDimensionX] = useState<number>()
  const [dimensionY, setDimensionY] = useState<number>()
  const [carPositionX, setCarPositionX] = useState<number>()
  const [carPositionY, setCarPositionY] = useState<number>()
  const [carDirection, setCarDirection] = useState<string>()

  const onNewGameHandler = async (dimensionX: number, dimensionY: number) => {
    try {
      const response = await axios.post(`${process.env.API_BASE_URL}/v1/game/`, { dimensionX, dimensionY })
      setGameID(response.data.id)
      setDimensionX(response.data.dimensionX)
      setDimensionY(response.data.dimensionY)
      setCarPositionX(undefined)
      setCarPositionY(undefined)
      setCarDirection(undefined)
    } catch (error) {
      console.log(error)
    }
  }

  const onPlaceHandler = async (carPositionX: number, carPositionY: number, carDirection: string) => {
    try {
      const response = await axios.post(`${process.env.API_BASE_URL}/v1/game/place`, { id: gameID, carPositionX, carPositionY, carDirection })
      setCarPositionX(response.data.carPositionX)
      setCarPositionY(response.data.carPositionY)
      setCarDirection(response.data.carDirection)
    } catch (error) {
      console.log(error)
    }
  }

  const onTurn = async (turnDirection: string) => {
    try {
      const response = await axios.post(`${process.env.API_BASE_URL}/v1/game/turn`, { id: gameID, turnDirection })
      setCarDirection(response.data.carDirection)
    } catch (error) {
      console.log(error)
    }
  }

  const onMove = async () => {
    try {
      const response = await axios.post(`${process.env.API_BASE_URL}/v1/game/move`, { id: gameID })
      setCarPositionX(response.data.carPositionX)
      setCarPositionY(response.data.carPositionY)
    } catch (error) {
      console.log(error)
    }
  }

  return (
    <div>
      <Head>
        <title>Car Game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Car Game</h1>

      <div>
        <NewGameForm onNewGameHandler={onNewGameHandler} />

        {dimensionX != null && dimensionY != null && (
          <>
            {(carPositionX == null || carPositionY == null) ?
              <PlaceCarForm onPlaceHandler={onPlaceHandler} /> :
              (
                <div className='form'>
                  <div className='line'>
                    <Button variant="contained" onClick={() => onMove()}>MOVE</Button>
                  </div>
                  <div className='line'>
                    <Button variant="contained" onClick={() => onTurn('LEFT')}>{`<- LEFT`}</Button>
                    <Button variant="contained" onClick={() => onTurn('RIGHT')}>{`RIGHT ->`}</Button>
                  </div>
                </div>
              )}
            <GameBoard {...{ dimensionX, dimensionY, carPositionX, carPositionY, carDirection }} />
          </>
        )}
        <div className='compass'>
          <Image src={compass} alt="compass" width={100} height={100} />
        </div>
      </div>
    </div>
  )
}

export default Home
